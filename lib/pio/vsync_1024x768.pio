; Drive a 1024x768 @ 60Hz 8-bit-color VGA signal (65MHz pixel clock)
;  - vsync.pio manages the VSYNC line of the VGA signal.

.program vsync_1024x768

.wrap_target
    set x 17 [23]    ; Active frame (600 lines, 600 cycles, 24 from set + 18*32 from loop)
waitloop:
    nop [30]         ; 32 cycle loop -- nop + 30 + jmp = 32
    jmp x-- waitloop

    nop              ; Vertical Front Porch Delay (1 ln, 1 cycle)
    set pins, 1 [3]  ; Sync Pulse Length (4 ln, 4 cycles)
    set pins, 0 [22] ; Vertical Back Porch Delay (23 ln, 23 cycles, set pins + 22)
.wrap

% c-sdk {

// Helper function (for use in C program) to initialize this PIO program

static inline void vsync_1024x768_program_init(PIO pio, uint sm, uint offset, uint dataPin) {
    //Initialize VSYNC pin
    pio_gpio_init(pio, dataPin);

    //Set pin to outputs
    pio_sm_set_consecutive_pindirs(pio, sm, dataPin, 1, true);

    //Get default state machine configuration
    pio_sm_config c = vsync_1024x768_program_get_default_config(offset);

    //Set pin to 'set'
    sm_config_set_set_pins(&c, dataPin, 1);

    //Preset pin to LOW
    pio_sm_set_pins(pio, sm, 0);

    //Setup FIFO
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    //Setup state machine clock divider
    //Theoretical clock divider: 3168.0 -- 120MHz Base clock, / 3 = 40MHz pixel clock, /1056 pixels per line
    sm_config_set_clkdiv(&c, 3168.0);
    
    //Setup autopull TX FIFO --> OSR after 32 bits have been shifted out of OSR
    sm_config_set_out_shift(&c, true, true, 32);

    //Start state machine with this configuration
    pio_sm_init(pio, sm, offset, &c);
}

%}